{"ast":null,"code":"var _jsxFileName = \"/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/TaskDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskDetails = ({\n  task,\n  onClose\n}) => {\n  _s();\n  const [modelName, setModelName] = useState(null);\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/viewModel').then(response => {\n      setModelName(response.data.name);\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching pulling:', error);\n    });\n  }, [task.train_model_id]);\n  if (!task) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: modelName ? modelName : 'Loading model name...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.file_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.task_type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskDetails, \"nqgBBBvJW+pYgQ2ILF59e65SfrI=\");\n_c = TaskDetails;\nexport default TaskDetails;\nvar _c;\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TaskDetails","task","onClose","_s","modelName","setModelName","get","then","response","data","name","console","log","catch","error","train_model_id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","description","file_name","task_type","onClick","_c","$RefreshReg$"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/TaskDetails.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\n\nconst TaskDetails = ({ task, onClose }) => {\n  const [modelName, setModelName] = useState(null);\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/viewModel')\n      .then(response => {\n        setModelName(response.data.name);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching pulling:', error);\n      });\n\n  }, [task.train_model_id]);\n\n  if (!task) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n          <h2>{task.name}</h2>\n          <p>{task.description}</p>\n          <p>{modelName ? modelName : 'Loading model name...'}</p>\n          <p>{task.file_name}</p>\n          <p>{task.task_type}</p>\n          <button onClick={onClose}>Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACS,GAAG,CAAC,iCAAiC,CAAC,CACzCC,IAAI,CAACC,QAAQ,IAAI;MAChBH,YAAY,CAACG,QAAQ,CAACC,IAAI,CAACC,IAAI,CAAC;MAChCC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDI,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EAEN,CAAC,EAAE,CAACb,IAAI,CAACc,cAAc,CAAC,CAAC;EAEzB,IAAI,CAACd,IAAI,EAAE,OAAO,IAAI;EAEtB,oBACEF,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBlB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC1BlB,OAAA;QAAAkB,QAAA,EAAKhB,IAAI,CAACS;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBtB,OAAA;QAAAkB,QAAA,EAAIhB,IAAI,CAACqB;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBtB,OAAA;QAAAkB,QAAA,EAAIb,SAAS,GAAGA,SAAS,GAAG;MAAuB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxDtB,OAAA;QAAAkB,QAAA,EAAIhB,IAAI,CAACsB;MAAS;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBtB,OAAA;QAAAkB,QAAA,EAAIhB,IAAI,CAACuB;MAAS;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBtB,OAAA;QAAQ0B,OAAO,EAAEvB,OAAQ;QAAAe,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA9BIH,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAgCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}