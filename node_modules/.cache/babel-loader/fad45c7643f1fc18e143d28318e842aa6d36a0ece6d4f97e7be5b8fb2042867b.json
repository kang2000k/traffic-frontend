{"ast":null,"code":"var _jsxFileName = \"/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/EditModelForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditModelForm = ({\n  model,\n  onClose\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    id: model.id,\n    name: model.name,\n    description: model.description || '',\n    model_file: model.model_file,\n    created_date: model.created_date,\n    table_configuration_id: model.table_configuration_id\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      formData.table_configuration_id = parseInt(formData.table_configuration_id, 10);\n      const response = await axios.put(`http://localhost:5000/boundary/editModel`, formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('Updated Successfully');\n        onClose();\n        navigate('/model');\n      }\n    } catch (error) {\n      alert('Update failed');\n      onClose();\n      navigate('/model');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n};\n_s(EditModelForm, \"+1NyJBOYVUiqTWvic2o11w8gyes=\", false, function () {\n  return [useNavigate];\n});\n_c = EditModelForm;\nexport default EditModelForm;\nvar _c;\n$RefreshReg$(_c, \"EditModelForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","EditModelForm","model","onClose","_s","navigate","formData","setFormData","id","name","description","model_file","created_date","table_configuration_id","handleChange","e","value","target","handleSubmit","preventDefault","parseInt","response","put","headers","status","alert","error","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/EditModelForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst EditModelForm = ({ model, onClose }) => {\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    id: model.id,\n    name: model.name,\n    description: model.description || '',\n    model_file: model.model_file,\n    created_date: model.created_date,\n    table_configuration_id: model.table_configuration_id,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      formData.table_configuration_id = parseInt(formData.table_configuration_id, 10);\n      const response = await axios.put(`http://localhost:5000/boundary/editModel`, formData, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (response.status === 200) {\n        alert('Updated Successfully');\n        onClose();\n        navigate('/model');\n      }\n    } catch (error) {\n      alert('Update failed');\n      onClose();\n      navigate('/model');\n    }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <label>\n              Name:\n              <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Description:\n              <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n              />\n          </label>\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n      </form>\n  );\n};\n\nexport default EditModelForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}