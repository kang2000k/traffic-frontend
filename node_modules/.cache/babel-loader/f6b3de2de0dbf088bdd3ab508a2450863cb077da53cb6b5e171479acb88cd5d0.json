{"ast":null,"code":"var _jsxFileName = \"/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/DeployConfirmForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeployConfirmForm = ({\n  model,\n  onClose\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [task, setTask] = useState([]);\n  const [selected_task, setSelected_task] = useState(null);\n  const [formData, setFormData] = useState({\n    id: model.id,\n    name: model.name,\n    description: model.description,\n    model_file: model.model_file,\n    table_configuration_id: model.table_configuration_id\n  });\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://localhost:5000/boundary/ViewTask').then(response => {\n      setTask(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching pulling:', error);\n    });\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (selected_task.train_model_id != null) {\n      const confirmSubmit = window.confirm(\"This task is using other Model, proceed to change model?\");\n      if (confirmSubmit) {\n        try {\n          const response = await axios.post('http://localhost:5000/boundary/deployModel', formData, {\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.status === 200) {\n            alert('Deployed Successfully');\n            onClose();\n            navigate('/model');\n          }\n        } catch (error) {\n          alert('Deployed failed');\n          onClose();\n          navigate('/model');\n        }\n      } else {\n        alert('Deployment Cancelled');\n        onClose();\n        navigate('/model');\n      }\n    } else {\n      try {\n        const response = await axios.post('http://localhost:5000/boundary/deployModel', formData, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.status === 200) {\n          alert('Deployed Successfully');\n          onClose();\n          navigate('/model');\n        }\n      } catch (error) {\n        alert('Deployed failed');\n        onClose();\n        navigate('/model');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Model Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type\",\n        value: selected_task,\n        onChange: e => setSelected_task(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Model Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this), task.map(tk => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: tk.id,\n          children: tk.name\n        }, tk.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Model Type ID: \", selected_task]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n_s(DeployConfirmForm, \"+ZfVxLtz3Xy8eIADSmkSyXuiuYY=\", false, function () {\n  return [useNavigate];\n});\n_c = DeployConfirmForm;\nexport default DeployConfirmForm;\nvar _c;\n$RefreshReg$(_c, \"DeployConfirmForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","DeployConfirmForm","model","onClose","_s","navigate","task","setTask","selected_task","setSelected_task","formData","setFormData","id","name","description","model_file","table_configuration_id","get","then","response","data","console","log","catch","error","handleSubmit","e","preventDefault","train_model_id","confirmSubmit","window","confirm","post","headers","status","alert","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","disabled","map","tk","type","onClick","_c","$RefreshReg$"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/DeployConfirmForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst DeployConfirmForm = ({model, onClose}) => {\n  const navigate = useNavigate();\n  const [task, setTask] = useState([]);\n  const [selected_task, setSelected_task] = useState(null);\n  const [formData, setFormData] = useState({\n    id: model.id,\n    name: model.name,\n    description:  model.description,\n    model_file: model.model_file,\n    table_configuration_id: model.table_configuration_id\n  });\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://localhost:5000/boundary/ViewTask')\n      .then(response => {\n        setTask(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching pulling:', error);\n      });\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (selected_task.train_model_id != null) {\n        const confirmSubmit = window.confirm(\"This task is using other Model, proceed to change model?\");\n        if (confirmSubmit) {\n            try {\n                const response = await axios.post('http://localhost:5000/boundary/deployModel', formData, {\n                    headers: {\n                    'Content-Type': 'application/json',\n                    }})\n                if (response.status === 200) {\n                    alert('Deployed Successfully');\n                        onClose();\n                        navigate('/model');\n                }\n            } catch (error) {\n                alert('Deployed failed');\n                onClose();\n                navigate('/model');\n            }\n        } else {\n            alert('Deployment Cancelled');\n            onClose();\n            navigate('/model');\n        }\n    } else {\n        try {\n                const response = await axios.post('http://localhost:5000/boundary/deployModel', formData, {\n                    headers: {\n                    'Content-Type': 'application/json',\n                    }})\n                if (response.status === 200) {\n                    alert('Deployed Successfully');\n                        onClose();\n                        navigate('/model');\n                }\n            } catch (error) {\n                alert('Deployed failed');\n                onClose();\n                navigate('/model');\n            }\n    }\n\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <div>\n              <label htmlFor=\"type\">Model Type</label>\n              <select\n                  id=\"type\"\n                  value={selected_task}\n                  onChange={(e) => setSelected_task(e.target.value)}\n              >\n                  <option value=\"\" disabled>Select Model Type</option>\n                  {task.map((tk) => (\n                      <option key={tk.id} value={tk.id}>\n                          {tk.name}\n                      </option>\n                  ))}\n              </select>\n              <p>Selected Model Type ID: {selected_task}</p>\n          </div>\n\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n      </form>\n  );\n};\n\nexport default DeployConfirmForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}