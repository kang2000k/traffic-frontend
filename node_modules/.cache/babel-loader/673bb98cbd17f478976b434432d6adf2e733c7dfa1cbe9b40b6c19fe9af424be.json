{"ast":null,"code":"var _jsxFileName = \"/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/AddTableForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTableForm = ({\n  onClose\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [MType, setMType] = useState([]);\n  const [selected_type, setSelected_type] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    file_id: '',\n    file_name: '',\n    columns: '',\n    model_type_id: '',\n    hyper_parameters: ''\n  });\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/viewModelType').then(response => {\n      setMType(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching pulling:', error);\n    });\n  }, []);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n    if (name === 'model_type_id') {\n      setFormData({\n        ...formData,\n        [name]: parseInt(value, 10) || ''\n      }); // Use || '' to handle NaN\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/boundary/addTableConfig', formData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        alert('Created Successfully');\n        onClose();\n        navigate('/table');\n      }\n    } catch (error) {\n      alert('Created failed');\n      onClose();\n      navigate('/table');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Table Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"table_name\",\n        value: formData.table_name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Columns selected eg.(a, b, c):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"columns\",\n        value: formData.columns,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Model Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"type\",\n        value: selected_type,\n        onChange: e => setSelected_type(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select Model Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this), MType.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: type.id,\n          children: type.type_name\n        }, type.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Model Type ID: \", selected_type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Hyper parameters:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hyper_parameters\",\n        value: formData.hyper_parameters,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: onClose,\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n_s(AddTableForm, \"xalnzR8Z9fdvFJP85BgduvnGQVU=\", false, function () {\n  return [useNavigate];\n});\n_c = AddTableForm;\nexport default AddTableForm;\nvar _c;\n$RefreshReg$(_c, \"AddTableForm\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","AddTableForm","onClose","_s","navigate","MType","setMType","selected_type","setSelected_type","formData","setFormData","name","description","file_id","file_name","columns","model_type_id","hyper_parameters","get","then","response","data","console","log","catch","error","handleChange","e","value","target","parseInt","handleSubmit","preventDefault","post","headers","status","alert","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","table_name","htmlFor","id","disabled","map","type_name","onClick","_c","$RefreshReg$"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/AddTableForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst AddTableForm = ({onClose}) => {\n  const navigate = useNavigate();\n  const [MType, setMType] = useState([]);\n  const [selected_type, setSelected_type] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description:  '',\n    file_id: '',\n    file_name: '',\n    columns: '',\n    model_type_id: '',\n    hyper_parameters: ''\n  });\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/viewModelType')\n      .then(response => {\n        setMType(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching pulling:', error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n    if (name === 'model_type_id') {\n    setFormData({ ...formData, [name]: parseInt(value, 10) || '' }); // Use || '' to handle NaN\n      } else {\n        setFormData({ ...formData, [name]: value });\n      }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/boundary/addTableConfig', formData, {\n        headers: {\n    'Content-Type': 'application/json',\n        }\n})\n\n      if (response.status === 200) {\n        alert('Created Successfully');\n        onClose();\n        navigate('/table');\n      }\n    } catch (error) {\n      alert('Created failed');\n      onClose();\n      navigate('/table');\n    }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <label>\n              Name:\n              <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Description:\n              <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Table Name:\n              <input\n                  type=\"text\"\n                  name=\"table_name\"\n                  value={formData.table_name}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Columns selected eg.(a, b, c):\n              <input\n                  type=\"text\"\n                  name=\"columns\"\n                  value={formData.columns}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <div>\n              <label htmlFor=\"type\">Model Type</label>\n              <select\n                  id=\"type\"\n                  value={selected_type}\n                  onChange={(e) => setSelected_type(e.target.value)}\n              >\n                  <option value=\"\" disabled>Select Model Type</option>\n                  {MType.map((type) => (\n                      <option key={type.id} value={type.id}>\n                          {type.type_name}\n                      </option>\n                  ))}\n              </select>\n              <p>Selected Model Type ID: {selected_type}</p>\n          </div>\n\n          <label>\n              Hyper parameters:\n              <input\n                  type=\"text\"\n                  name=\"hyper_parameters\"\n                  value={formData.hyper_parameters}\n                  onChange={handleChange}\n              />\n          </label>\n\n          {/* Add more input fields for other properties as necessary */}\n\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n      </form>\n  );\n};\n\nexport default AddTableForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,GAAGA,CAAC;EAACC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAClC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC;IACvCe,IAAI,EAAE,EAAE;IACRC,WAAW,EAAG,EAAE;IAChBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,EAAE;IACbC,OAAO,EAAE,EAAE;IACXC,aAAa,EAAE,EAAE;IACjBC,gBAAgB,EAAE;EACpB,CAAC,CAAC;EAEFtB,SAAS,CAAC,MAAM;IACd;IACAE,KAAK,CAACqB,GAAG,CAAC,qCAAqC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAI;MAChBd,QAAQ,CAACc,QAAQ,CAACC,IAAI,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC5B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEhB,IAAI;MAAEiB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACE,IAAI,GAAGiB;IAAM,CAAC,CAAC;IAC3C,IAAIjB,IAAI,KAAK,eAAe,EAAE;MAC9BD,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACE,IAAI,GAAGmB,QAAQ,CAACF,KAAK,EAAE,EAAE,CAAC,IAAI;MAAG,CAAC,CAAC,CAAC,CAAC;IAC/D,CAAC,MAAM;MACLlB,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACE,IAAI,GAAGiB;MAAM,CAAC,CAAC;IAC7C;EACJ,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMvB,KAAK,CAACoC,IAAI,CAAC,+CAA+C,EAAExB,QAAQ,EAAE;QAC3FyB,OAAO,EAAE;UACb,cAAc,EAAE;QACZ;MACR,CAAC,CAAC;MAEI,IAAId,QAAQ,CAACe,MAAM,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,sBAAsB,CAAC;QAC7BlC,OAAO,CAAC,CAAC;QACTE,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC,CAAC,OAAOqB,KAAK,EAAE;MACdW,KAAK,CAAC,gBAAgB,CAAC;MACvBlC,OAAO,CAAC,CAAC;MACTE,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,oBACIJ,OAAA;IAAMqC,QAAQ,EAAEN,YAAa;IAAAO,QAAA,gBACzBtC,OAAA;MAAAsC,QAAA,GAAO,OAEH,eAAAtC,OAAA;QACIuC,IAAI,EAAC,MAAM;QACX5B,IAAI,EAAC,MAAM;QACXiB,KAAK,EAAEnB,QAAQ,CAACE,IAAK;QACrB6B,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAER5C,OAAA;MAAAsC,QAAA,GAAO,cAEH,eAAAtC,OAAA;QACIW,IAAI,EAAC,aAAa;QAClBiB,KAAK,EAAEnB,QAAQ,CAACG,WAAY;QAC5B4B,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAER5C,OAAA;MAAAsC,QAAA,GAAO,aAEH,eAAAtC,OAAA;QACIuC,IAAI,EAAC,MAAM;QACX5B,IAAI,EAAC,YAAY;QACjBiB,KAAK,EAAEnB,QAAQ,CAACoC,UAAW;QAC3BL,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAER5C,OAAA;MAAAsC,QAAA,GAAO,gCAEH,eAAAtC,OAAA;QACIuC,IAAI,EAAC,MAAM;QACX5B,IAAI,EAAC,SAAS;QACdiB,KAAK,EAAEnB,QAAQ,CAACM,OAAQ;QACxByB,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAER5C,OAAA;MAAAsC,QAAA,gBACItC,OAAA;QAAO8C,OAAO,EAAC,MAAM;QAAAR,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxC5C,OAAA;QACI+C,EAAE,EAAC,MAAM;QACTnB,KAAK,EAAErB,aAAc;QACrBiC,QAAQ,EAAGb,CAAC,IAAKnB,gBAAgB,CAACmB,CAAC,CAACE,MAAM,CAACD,KAAK,CAAE;QAAAU,QAAA,gBAElDtC,OAAA;UAAQ4B,KAAK,EAAC,EAAE;UAACoB,QAAQ;UAAAV,QAAA,EAAC;QAAiB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACnDvC,KAAK,CAAC4C,GAAG,CAAEV,IAAI,iBACZvC,OAAA;UAAsB4B,KAAK,EAAEW,IAAI,CAACQ,EAAG;UAAAT,QAAA,EAChCC,IAAI,CAACW;QAAS,GADNX,IAAI,CAACQ,EAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACT5C,OAAA;QAAAsC,QAAA,GAAG,0BAAwB,EAAC/B,aAAa;MAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eAEN5C,OAAA;MAAAsC,QAAA,GAAO,mBAEH,eAAAtC,OAAA;QACIuC,IAAI,EAAC,MAAM;QACX5B,IAAI,EAAC,kBAAkB;QACvBiB,KAAK,EAAEnB,QAAQ,CAACQ,gBAAiB;QACjCuB,QAAQ,EAAEd;MAAa;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAIR5C,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrC5C,OAAA;MAAQuC,IAAI,EAAC,QAAQ;MAACY,OAAO,EAAEjD,OAAQ;MAAAoC,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrD,CAAC;AAEb,CAAC;AAACzC,EAAA,CAnIIF,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAsD,EAAA,GADxBnD,YAAY;AAqIlB,eAAeA,YAAY;AAAC,IAAAmD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}