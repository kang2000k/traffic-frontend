{"ast":null,"code":"import React,{useEffect,useState}from'react';import TaskDetails from'./TaskDetails';import TopBar from\"./Top-bar\";import SideMenu from\"./Side-menu\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=()=>{const[tasks,setTasks]=useState([]);const[selectedTask,setSelectedTask]=useState(null);const[isModalOpen,setIsModalOpen]=useState(false);useEffect(()=>{// Fetch tasks from Flask backend using Axios\naxios.get('http://localhost:5000/boundary/ViewTask').then(response=>{setTasks(response.data);console.log(response.data);}).catch(error=>{console.error('Error fetching tasks:',error);});},[]);const handleViewDetails=task=>{setSelectedTask(task);setIsModalOpen(true);};const handleCloseModal=()=>{setIsModalOpen(false);setSelectedTask(null);};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-page\",children:[/*#__PURE__*/_jsx(TopBar,{title:\"Dashboard\"}),\" \",/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(SideMenu,{})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"task-list\",children:[tasks.length===0?/*#__PURE__*/_jsx(\"h1\",{children:\"No available task\"}):tasks.map(task=>/*#__PURE__*/_jsxs(\"div\",{className:\"task-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:task.name}),/*#__PURE__*/_jsx(\"p\",{children:task.description}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleViewDetails(task),children:\"View Details\"})]},task.id)),isModalOpen&&/*#__PURE__*/_jsx(TaskDetails,{task:selectedTask,onClose:handleCloseModal})]})})]})]});};export default TaskList;","map":{"version":3,"names":["React","useEffect","useState","TaskDetails","TopBar","SideMenu","axios","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","setTasks","selectedTask","setSelectedTask","isModalOpen","setIsModalOpen","get","then","response","data","console","log","catch","error","handleViewDetails","task","handleCloseModal","className","children","title","length","map","name","description","onClick","id","onClose"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskDetails from './TaskDetails';\nimport TopBar from \"./Top-bar\";\nimport SideMenu from \"./Side-menu\";\nimport axios from \"axios\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://localhost:5000/boundary/ViewTask')\n      .then(response => {\n        setTasks(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching tasks:', error);\n      });\n  }, []);\n\n  const handleViewDetails = (task) => {\n    setSelectedTask(task);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  return (\n    <div className=\"task-page\">\n      <TopBar title=\"Dashboard\" /> {/* Use the top bar here */}\n        <tr>\n          <td>\n            <SideMenu />\n          </td>\n          <td>\n            <div className=\"task-list\">\n              {tasks.length === 0 ? (\n                  <h1>No available task</h1>\n              ) : (\n                  tasks.map(task => (\n                      <div key={task.id} className=\"task-card\">\n                        <h3>{task.name}</h3>\n                        <p>{task.description}</p>\n                        <button onClick={() => handleViewDetails(task)}>\n                          View Details\n                        </button>\n                      </div>\n                  ))\n              )}\n              {isModalOpen && (\n                  <TaskDetails task={selectedTask} onClose={handleCloseModal}/>\n              )}\n            </div>\n          </td>\n        </tr>\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,CAAAC,MAAM,KAAM,WAAW,CAC9B,MAAO,CAAAC,QAAQ,KAAM,aAAa,CAClC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACY,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtD,KAAM,CAACc,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAErDD,SAAS,CAAC,IAAM,CACd;AACAK,KAAK,CAACY,GAAG,CAAC,yCAAyC,CAAC,CACjDC,IAAI,CAACC,QAAQ,EAAI,CAChBP,QAAQ,CAACO,QAAQ,CAACC,IAAI,CAAC,CACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC,CAC5B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,EAAI,CACdH,OAAO,CAACG,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,iBAAiB,CAAIC,IAAI,EAAK,CAClCZ,eAAe,CAACY,IAAI,CAAC,CACrBV,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,KAAM,CAAAW,gBAAgB,CAAGA,CAAA,GAAM,CAC7BX,cAAc,CAAC,KAAK,CAAC,CACrBF,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED,mBACEL,KAAA,QAAKmB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtB,IAAA,CAACJ,MAAM,EAAC2B,KAAK,CAAC,WAAW,CAAE,CAAC,IAAC,cAC3BrB,KAAA,OAAAoB,QAAA,eACEtB,IAAA,OAAAsB,QAAA,cACEtB,IAAA,CAACH,QAAQ,GAAE,CAAC,CACV,CAAC,cACLG,IAAA,OAAAsB,QAAA,cACEpB,KAAA,QAAKmB,SAAS,CAAC,WAAW,CAAAC,QAAA,EACvBlB,KAAK,CAACoB,MAAM,GAAK,CAAC,cACfxB,IAAA,OAAAsB,QAAA,CAAI,mBAAiB,CAAI,CAAC,CAE1BlB,KAAK,CAACqB,GAAG,CAACN,IAAI,eACVjB,KAAA,QAAmBmB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtCtB,IAAA,OAAAsB,QAAA,CAAKH,IAAI,CAACO,IAAI,CAAK,CAAC,cACpB1B,IAAA,MAAAsB,QAAA,CAAIH,IAAI,CAACQ,WAAW,CAAI,CAAC,cACzB3B,IAAA,WAAQ4B,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAACC,IAAI,CAAE,CAAAG,QAAA,CAAC,cAEhD,CAAQ,CAAC,GALDH,IAAI,CAACU,EAMV,CACR,CACJ,CACArB,WAAW,eACRR,IAAA,CAACL,WAAW,EAACwB,IAAI,CAAEb,YAAa,CAACwB,OAAO,CAAEV,gBAAiB,CAAC,CAC/D,EACE,CAAC,CACJ,CAAC,EACH,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}