{"ast":null,"code":"import React,{useEffect,useState}from'react';import axios from\"axios\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AddTableForm=_ref=>{let{onClose}=_ref;const navigate=useNavigate();const[MType,setMType]=useState([]);const[selected_type,setSelected_type]=useState(null);const[formData,setFormData]=useState({name:'',description:'',table_name:'',columns_selected:'',model_type_id:'',hyper_parameters:''});useEffect(()=>{// Fetch tasks from Flask backend using Axios\naxios.get('http://localhost:5000/boundary/viewModelType').then(response=>{setMType(response.data);console.log(response.data);}).catch(error=>{console.error('Error fetching pulling:',error);});},[]);const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});if(name==='model_type_id'){setFormData({...formData,[name]:parseInt(value,10)||''});// Use || '' to handle NaN\n}else{setFormData({...formData,[name]:value});}};const handleSubmit=async e=>{e.preventDefault();try{formData.columns_selected=JSON.parse(formData.columns_selected);formData.hyper_parameters=JSON.parse(formData.hyper_parameters);const response=await axios.post('http://localhost:5000/boundary/addTableConfig',formData,{headers:{'Content-Type':'application/json'}});if(response.status===200){alert('Created Successfully');onClose();navigate('/table');}}catch(error){alert('Created failed');onClose();navigate('/table');}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Description:\",/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:formData.description,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Table Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"table_name\",value:formData.table_name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Columns selected eg.([\\\"a\\\", \\\"b\\\", \\\"c\\\"]):\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"columns_selected\",value:formData.columns_selected,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"type\",children:\"Model Type\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"type\",value:selected_type,onChange:e=>setSelected_type(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select Model Type\"}),MType.map(type=>/*#__PURE__*/_jsx(\"option\",{value:type.id,children:type.type_name},type.id))]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Selected Model Type ID: \",selected_type]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Hyper parameters:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"hyper_parameters\",value:formData.hyper_parameters,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:onClose,children:\"Cancel\"})]});};export default AddTableForm;","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","AddTableForm","_ref","onClose","navigate","MType","setMType","selected_type","setSelected_type","formData","setFormData","name","description","table_name","columns_selected","model_type_id","hyper_parameters","get","then","response","data","console","log","catch","error","handleChange","e","value","target","parseInt","handleSubmit","preventDefault","JSON","parse","post","headers","status","alert","onSubmit","children","type","onChange","htmlFor","id","disabled","map","type_name","onClick"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/AddTableForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst AddTableForm = ({onClose}) => {\n  const navigate = useNavigate();\n  const [MType, setMType] = useState([]);\n  const [selected_type, setSelected_type] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description:  '',\n    table_name: '',\n    columns_selected: '',\n    model_type_id: '',\n    hyper_parameters: ''\n  });\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://localhost:5000/boundary/viewModelType')\n      .then(response => {\n        setMType(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching pulling:', error);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n    if (name === 'model_type_id') {\n    setFormData({ ...formData, [name]: parseInt(value, 10) || '' }); // Use || '' to handle NaN\n      } else {\n        setFormData({ ...formData, [name]: value });\n      }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      formData.columns_selected = JSON.parse(formData.columns_selected);\n      formData.hyper_parameters = JSON.parse(formData.hyper_parameters)\n      const response = await axios.post('http://localhost:5000/boundary/addTableConfig', formData, {\n        headers: {\n    'Content-Type': 'application/json',\n        }\n})\n\n      if (response.status === 200) {\n        alert('Created Successfully');\n        onClose();\n        navigate('/table');\n      }\n    } catch (error) {\n      alert('Created failed');\n      onClose();\n      navigate('/table');\n    }\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n          <label>\n              Name:\n              <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={formData.name}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Description:\n              <textarea\n                  name=\"description\"\n                  value={formData.description}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Table Name:\n              <input\n                  type=\"text\"\n                  name=\"table_name\"\n                  value={formData.table_name}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <label>\n              Columns selected eg.([\"a\", \"b\", \"c\"]):\n              <input\n                  type=\"text\"\n                  name=\"columns_selected\"\n                  value={formData.columns_selected}\n                  onChange={handleChange}\n              />\n          </label>\n\n          <div>\n              <label htmlFor=\"type\">Model Type</label>\n              <select\n                  id=\"type\"\n                  value={selected_type}\n                  onChange={(e) => setSelected_type(e.target.value)}\n              >\n                  <option value=\"\" disabled>Select Model Type</option>\n                  {MType.map((type) => (\n                      <option key={type.id} value={type.id}>\n                          {type.type_name}\n                      </option>\n                  ))}\n              </select>\n              <p>Selected Model Type ID: {selected_type}</p>\n          </div>\n\n          <label>\n              Hyper parameters:\n              <input\n                  type=\"text\"\n                  name=\"hyper_parameters\"\n                  value={formData.hyper_parameters}\n                  onChange={handleChange}\n              />\n          </label>\n\n          {/* Add more input fields for other properties as necessary */}\n\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={onClose}>Cancel</button>\n      </form>\n  );\n};\n\nexport default AddTableForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}