{"ast":null,"code":"var _jsxFileName = \"/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TaskDetails from './TaskDetails';\nimport TopBar from \"./Top-bar\";\nimport SideMenu from \"./Side-menu\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/ViewTask', {\n      withCredentials: true\n    }).then(response => {\n      setTasks(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.error('Error fetching tasks:', error);\n    });\n  }, []);\n  const handleViewDetails = task => {\n    setSelectedTask(task);\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-page\",\n    children: [/*#__PURE__*/_jsxDEV(TopBar, {\n      title: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(SideMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: [tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"No available task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this) : tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleViewDetails(task),\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 23\n          }, this)), isModalOpen && /*#__PURE__*/_jsxDEV(TaskDetails, {\n            task: selectedTask,\n            onClose: handleCloseModal\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"n4S2jK1saxzFbQN7mWGhKenNzXc=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","TaskDetails","TopBar","SideMenu","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","selectedTask","setSelectedTask","isModalOpen","setIsModalOpen","get","withCredentials","then","response","data","console","log","catch","error","handleViewDetails","task","handleCloseModal","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","length","map","name","description","onClick","id","onClose","_c","$RefreshReg$"],"sources":["/Users/lee/PycharmProjects/TrafficForecasting/frontend/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TaskDetails from './TaskDetails';\nimport TopBar from \"./Top-bar\";\nimport SideMenu from \"./Side-menu\";\nimport axios from \"axios\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    // Fetch tasks from Flask backend using Axios\n    axios.get('http://127.0.0.1:5000/ViewTask', {\n      withCredentials: true\n    })\n      .then(response => {\n        setTasks(response.data);\n        console.log(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching tasks:', error);\n      });\n  }, []);\n\n  const handleViewDetails = (task) => {\n    setSelectedTask(task);\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedTask(null);\n  };\n\n  return (\n    <div className=\"task-page\">\n      <TopBar title=\"Dashboard\" /> {/* Use the top bar here */}\n        <tr>\n          <td>\n            <SideMenu />\n          </td>\n          <td>\n            <div className=\"task-list\">\n              {tasks.length === 0 ? (\n                  <h1>No available task</h1>\n              ) : (\n                  tasks.map(task => (\n                      <div key={task.id} className=\"task-card\">\n                        <h3>{task.name}</h3>\n                        <p>{task.description}</p>\n                        <button onClick={() => handleViewDetails(task)}>\n                          View Details\n                        </button>\n                      </div>\n                  ))\n              )}\n              {isModalOpen && (\n                  <TaskDetails task={selectedTask} onClose={handleCloseModal}/>\n              )}\n            </div>\n          </td>\n        </tr>\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}